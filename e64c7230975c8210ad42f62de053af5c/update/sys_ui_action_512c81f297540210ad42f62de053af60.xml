<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>raise_a_request</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function toCheckSlots(start_min,end_min){
	var slots = [{'start':0,'end':15},{'start':15,'end':30},{'start':30,'end':45},{'start':45,'end':59}];
	for(i=0;i<4;i++){
		if(start_min == slots[i].start && end_min== slots[i].end){
			return true;
		}
	}
	return false;
}

function slotValidation(g_form){
	var appointment_date = g_form.getValue('appointment_date');
	var appointment_st = g_form.getValue('appointment_start_time');
	var appointment_et = g_form.getValue('appointment_end_time');
	//g_form.addErrorMessage(appointment_date+": "+appointment_st+"  "+appointment_et);
	//if(appointment_st != "00:00:00" && !appointment_et!="00:00:00"){
	if(appointment_date!=""){
		var startDate = new Date(appointment_date+ " "+appointment_st);
	var endDate = new Date(appointment_date+ " "+appointment_et);
	var minDiff = Math.abs((endDate-startDate)/(1000*60));
	var start_min = startDate.getMinutes();
	var end_min = endDate.getMinutes();
	
	if(minDiff>15){
		g_form.addErrorMessage("Appointment can be booked for 15 min slot only");
		return false;
	}
	if(!toCheckSlots(start_min,end_min)){
		g_form.addErrorMessage("Time slots can be booked starting in an hour for every 15 min slot");
		return false;
	}
	}
	return true;
}
function onClick(g_form) {
	// to check slot time below 15min
	//var isValidation = false;
	if(slotValidation(g_form)){
		g_form.submit('raise_a_request');
	}
	// 	if(!isValid){
	// 	g_form.submit('raise_a_request');
	// }
	// else{
	// 	gs.addErrorMessage("testing");
	// }
	

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>true</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>true</format_for_configurable_workspace>
        <hint/>
        <isolate_script>true</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Raise a request</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[var st_time = new GlideDateTime(current.appointment_start_time).getLocalTime().toString().split(' ')[1];
var end_time = new GlideDateTime(current.appointment_end_time).getLocalTime().toString().split(' ')[1];
var date=  current.appointment_date;
 
var nr = new GlideRecord('x_1287841_medimeet_hosptial_doctor_slots');
nr.addQuery('hospital_name.name',current.hospital.name);
nr.addQuery('doctor_name.name.name',current.doctor.name.name);
nr.addQuery(`slot_start_time>=javascript:gs.dateGenerate('${date}','${st_time}')`);
nr.addQuery(`slot_end_time<=javascript:gs.dateGenerate('${date}','${end_time}')`);
nr.addQuery('date',date);
nr.query();
 
if(nr.next())
{
    gs.addInfoMessage("Slot is available");
    current.status = 5;
    current.update();
    // var flowInputs = {};
    // flowInputs['current'] = current;
    // flowInputs['table_name'] = current.getTableName();
    // sn_fd.Flow.executeFlow('x_1287841_medimeet.test_appointment',flowInputs);
	//gs.addInfoMessage(r+"Slot is available");
}
else if(st_time == "00:00:00"&& end_time=="00:00:00"){
    gs.addInfoMessage("Please check slot timings");
}
else {
    gs.addInfoMessage("No available slots. Please select another slot");
}
 ]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-15 09:20:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>512c81f297540210ad42f62de053af60</sys_id>
        <sys_mod_count>211</sys_mod_count>
        <sys_name>Raise a request</sys_name>
        <sys_overrides/>
        <sys_package display_value="MediMeet" source="x_1287841_medimeet">e64c7230975c8210ad42f62de053af5c</sys_package>
        <sys_policy/>
        <sys_scope display_value="MediMeet">e64c7230975c8210ad42f62de053af5c</sys_scope>
        <sys_update_name>sys_ui_action_512c81f297540210ad42f62de053af60</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-20 11:05:35</sys_updated_on>
        <table>x_1287841_medimeet_appointment</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
